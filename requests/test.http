# estado de la api
GET http://localhost:3000/api

###

# estado de la bd
GET http://localhost:3000/api/status

###

# ver todos los prod
GET http://localhost:3000/products

###

# ver todos los usuarios (crear endpoint)
GET http://localhost:3000/users

###

# crear usuario
POST http://localhost:3000/api/auth/create-account
Content-Type: application/json

{
  "email": "juancito@example.com",
  "password": "123456",
  "username": "juancito"
}

### 

### login (user registered)
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
    "email": "pablotorrez@gmail.com",
    "password": "123456"
}

### pausar la cuenta, `is-active` de la bd se actualiza
POST http://localhost:3000/api/paused-account
Content-Type: application/json

{
    "id_u": ""
}

###

### dashboard (route protected)
GET http://localhost:3000/dashboard/usertest14
Authorization: Bearer <token>

###

### carts

### para recuperar el carrito
GET http://localhost:3000/cart
Authorization: Bearer <token>

### para agregar productos al carrito
POST http://localhost:3000/cart
Content-Type: application/json
Authorization: Bearer <token>

{
    "productId": 1, 
    "quantity": 1
}


### para actualizar la cantidad de productos en el carrito
PUT http://localhost:3000/cart/14
Content-Type: application/json
Authorization: Bearer <token>

{
    "productId": 1,
    "quantity": 5
}

### para eliminar producto del carrito
DELETE http://localhost:3000/cart/1
Content-Type: application/json
Authorization: Bearer <token>

### para limpiar el carrito (borrar todo)
DELETE http://localhost:3000/cart/clear
Content-Type: application/json
Authorization: Bearer <token>

### para contar cuantos productos tengo
GET http://localhost:3000/cart/count
Content-Type: application/json
Authorization: Bearer <token>